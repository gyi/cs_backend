<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd ">
    
    <context:annotation-config />
    <context:component-scan base-package="com.cs.backend">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
		
	<!--配置数据源属性文件  -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>
	<!--配置数据源  -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass">
			<value>${jdbc.driver}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.user}</value>
		</property>
		<property name="password">
			<value>${jdbc.pwd}</value>
		</property>
		<property name="minPoolSize">
                <value>${jdbc.minPoolSize}</value>
        </property>
        <property name="maxPoolSize">
                <value>${jdbc.maxPoolSize}</value>
        </property>
        <property name="initialPoolSize">
                <value>${jdbc.initialPoolSize}</value>
        </property>
        <property name="maxIdleTime">
                <value>${jdbc.maxIdleTime}</value>
         </property>
         <property name="acquireIncrement">
                <value>${jdbc.maxIdleTime}</value>
         </property>
         <property name="maxStatements">
                <value>${jdbc.maxStatements}</value>
         </property>
	</bean>
	
	<!-- 配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       	<property name="dataSource" ref="dataSource" />
    </bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
	    <property name="configLocation" value="classpath:mybatis_config.xml" />  
	    <property name="dataSource" ref="dataSource" />  
	</bean> 
	
	<!-- 异步线程池 -->
	<bean id="threadPool"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数 -->
		<property name="corePoolSize" value="10" />
		<!-- 最大线程数 -->
		<property name="maxPoolSize" value="1000" />
		<!-- 队列最大长度 >=mainExecutor.maxSize -->
		<property name="queueCapacity" value="1000" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="300" />
		<!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
	
	<bean id="systemConfigTask" class="com.cs.backend.task.SystemConfigTask"/>
	
	<!-- 定时任务 -->
	<bean class="org.springframework.scheduling.timer.TimerFactoryBean" id="timerFactory">
		<property name="scheduledTimerTasks">
			<list>
				<ref bean="systemConfigTimer"/>
			</list>  
		</property>
	</bean>
	
	<!-- 定时更新系统配置-->
	<bean id="systemConfigTimer" class="org.springframework.scheduling.timer.ScheduledTimerTask">
        <property name="timerTask" ref="systemConfigTask"/>
        <!-- 设置启动延迟 -->      
		<property name="delay">     
            <value>60</value>     
        </property>     
         <!-- 后续延迟  -->  
        <property name="period">     
            <value>60000</value>     
        </property>     
	</bean>
</beans>